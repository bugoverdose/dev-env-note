[Netlify 셋업] 프로젝트 외부적으로 사전 진행.
1) Netlify App 셋업 (https://app.netlify.com/teams/bugoverdose/overview)

> "New site from Git"
> "Github" - Install CLI
> 배포할 repository 선택

> Branch to deploy : master

> Base directory는 비워두기
> Build command : npm run build 
> Publish directory : build/

> Deploy                // master 브랜치의 최신 커밋을 기준으로 자동 배포

> Production deploys    // 배포 실패 여부, warning, error 등의 로그 확인 가능

=============================================================================










 
=============================================================================
[프로젝트 내부 설정]
1) Build : src 폴더의 모든 파일들을 CSS & JS 코드로 컴파일 
 
[package.json]
"scripts": {
    // 개발용
    "apollo:codegen": "rm -rf src/generated_api_types && apollo client:codegen src/generated_api_types --target=typescript --outputFlat",
    "tailwind:build": "tailwind build ./src/styles/tailwind.css -o ./src/styles/styles.css",
    "start": "npm run apollo:codegen & npm run tailwind:build & react-scripts start",
    // 배포용
    "tailwind:prodbuild": "NODE_ENV=production npm run tailwind:build",
    "prebuild": "npm run tailwind:prodbuild",
    "build": "CI=false react-scripts build",
},
// netlify 서버에서 최종적으로 npm run build가 실행됨. (Netlify 서버에서 수정 가능)
// prebuild 실행되어 tailwind build 이후, 
   build 실행되어 src 폴더의 모든 파일들을 JS 코드로 컴파일.

// CI=false 옵션 : Netlify에서 ts warning 등을 에러로 인식하지 않도록 하는 설정.

=============================================================================
2) purgeCSS : 실제로 사용되는 css 클래스들만을 build하도록 설정
주의: NODE_ENV=production일 때 purge가 자동으로 실행됨. (디폴트 설정)

[tailwind.config.js]
module.exports = {
  purge: ["./src/**/*.tsx"],
  darkMode: false, // or 'media' or 'class'
  theme: {
    extend: {},
  },
  variants: {},
  plugins: [],
};


cf) /build 폴더와 styles.css 파일 모두 .gitignore에 넣어도 build될 때 새로 생성되므로 문제 없음.

=============================================================================
3) _redirects : Netlify app의 라우트 설정
- 기본적으로 /login 라우트로 접근시, login이라는 폴더를 찾도록 설정됨. (새로고침시 버그 발생)
- 해결방안: public 폴더 내부에 _redirects 파일 생성. 확장자 없음.
- 형식: [브라우저의 요청 => Netlify가 응답할 파일]
         /home              /

[public/_redirects]  
/* /index.html 200

- 의미: /로 시작하는 모든 요청에 대해 index.html 파일로 응답. 200
- index.html에 react application이 존재 => react router 제대로 동작하게 됨. 

- 버그 주의: <a> 등을 통해 외부의 다른 사이트로 이동할 수 없게 됨.

=============================================================================
4) 백엔드와 연결

[apollo.ts]
const httpLink = createHttpLink({
  uri:
    process.env.NODE_ENV === "production"
      ? "https://podcast-backend-bugod.herokuapp.com/graphql" // 배포된 백엔드의 playground 주소.
      : "http://localhost:3000/graphql", // cra도 3000 사용이 디폴트라 가급적 서로 다르게 설정.
});

// 웹소켓 링크의 경우 wss & ws 

=============================================================================